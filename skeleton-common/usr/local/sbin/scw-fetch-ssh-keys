#!/bin/sh
# description "fetch SSH keys"
# author "Scaleway <opensource@scaleway.com>"
# source "https://github.com/scaleway/image-tools/blob/master/skeleton-common/usr/local/sbin/scw-fetch-ssh-keys"

set -eo pipefail

# ensure /root/.ssh exists and has correct permissions
mkdir -p /root/.ssh
chmod 700 /root/.ssh

# `--upgrade` refreshes the metadata cache
if [ "$1" = "--upgrade" ]; then
	/usr/local/bin/scw-metadata > /dev/null
fi

grep_() { # like grep, but doesn't fail when nothing matches
	grep "$@" || true
}

make_authorized_keys() {
	local id
	id=$(/usr/local/bin/scw-metadata --cached ID)
	cat <<-EOF
		#
		# WARNING: Automatically generated file
		# This file will be erased at every boot
		# This file was generated with '/usr/local/sbin/scw-fetch-ssh-keys'
		#
		# To add a new key, you can:
		#   -- Add keys on your Scaleway account https://cloud.scaleway.com/#/credentials
		#   -- Add keys using server tags - https://cloud.scaleway.com/#/servers/$id
		#        - i.e: "AUTHORIZED_KEY=ssh-rsa_XXXXXXXXXXX AUTHORIZED_KEY=ssh-rsa_YYYYYYYYYYYYYYY"
		#        - Be sure to replace all spaces with underscores
		#        - $> sed 's/ /_/g' ~/.ssh/id_rsa.pub
		#   -- Add the keys to '/root/.ssh/instance_keys' which will be imported
		#
		# And recreate your 'authorized_keys' file with the new keys:
		#   -- Run 'scw-fetch-ssh-keys --upgrade'
		#
	EOF

	# add Scaleway account keys
	/usr/local/bin/scw-metadata --cached | grep_ SSH_PUBLIC_KEYS_.*_KEY | cut -d'=' -f 2- | tr -d \'

	# add Server tags keys
	/usr/local/bin/scw-metadata --cached | grep_ TAGS_.*=AUTHORIZED_KEY | cut -d'=' -f 3- | sed 's/_/\ /g'

	# Import custom keys
	if [ -f /root/.ssh/instance_keys ]; then
		cat <<-EOF
			# Below your custom ssh keys from '/root/.ssh/instance_keys'
		EOF
		cat /root/.ssh/instance_keys | grep_ -v "^#"
	fi
}

if authorized_keys=$(make_authorized_keys); then
	echo "$authorized_keys" > /root/.ssh/authorized_keys
fi
